<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<!-- TemplateBeginEditable name="doctitle" -->
<title>무제 문서</title>
<!-- TemplateEndEditable -->
<!-- TemplateBeginEditable name="head" -->
<!-- TemplateEndEditable -->
<style type="text/css">
<!--
body {
	font: 100%/1.4 Verdana, Arial, Helvetica, sans-serif;
	background-color: #42413C;
	margin: 0;
	padding: 0;
	color: #000;
}

/* ~~ 요소/태그 선택기 ~~ */
ul, ol, dl { /* 브라우저마다 다르므로 목록의 패딩과 여백을 0으로 지정하는 것이 가장 좋습니다. 일관성을 위해, 여기에서 또는 포함하고 있는 목록 항목(LI, DT, DD)에서 원하는 크기를 지정할 수 있습니다. 보다 구체적인 선택기를 쓰지 않는 한 여기에서 수행한 작업은 .nav 목록에 계단식으로 표시됩니다. */
	padding: 0;
	margin: 0;
}
h1, h2, h3, h4, h5, h6, p {
	margin-top: 0;	 /* 위쪽 여백을 제거하면 포함된 div에서 여백이 이스케이프되는 문제를 방지할 수 있습니다. 나머지 아래쪽 여백은 이어지는 요소에서 이 문제를 보류합니다. */
	padding-right: 15px;
	padding-left: 15px; /* div에 직접 추가하는 대신 div 내에 있는 요소의 측면에 패딩을 추가하면 상자 모델 수학이 제거됩니다. 측면 패딩이 있는 중첩된 div를 대체 메서드로 사용할 수도 있습니다. */
}
a img { /* 이 선택기는 링크로 둘러싸인 이미지 주변에 있는 일부 브라우저에 표시된 파란색 기본 테두리를 제거합니다. */
	border: none;
}

/* ~~ 사이트 링크의 스타일링은 커서 놓기 효과를 생성하는 선택기 그룹을 포함하여 이 순서대로 남아 있어야 합니다. ~~ */
a:link {
	color: #42413C;
	text-decoration: underline; /* 매우 독특하게 보이도록 링크에 스타일을 지정하는 경우를 제외하고는 시각적으로 빠르게 식별되도록 밑줄을 적용하는 것이 가장 좋습니다. */
}
a:visited {
	color: #6E6C64;
	text-decoration: underline;
}
a:hover, a:active, a:focus { /* 이 선택기 그룹은 마우스를 사용하는 사람과 동일한 커서 놓기 환경을 키보드 탐색기에 제공합니다. */
	text-decoration: none;
}

/* ~~ 이 고정 폭 컨테이너는 다른 모든 div를 둘러쌉니다. ~~ */
.container {
	width: 960px;
	background-color: #FFF;
	margin: 0 auto; /* 측면 자동 값, 폭으로 연결, 레이아웃 가운데 정렬 */
	overflow: hidden; /* 이 선언은 내부의 부동 열이 끝나고 포함하는 위치를 .container가 인식하도록 합니다. */
}

/* ~~ 이 항목은 레이아웃에 대한 열입니다. ~~ 

1) 패딩은 div의 위쪽 및/또는 아래쪽에만 배치됩니다. 이 div에 포함된 요소의 경우 측면에 패딩이 있습니다. 이를 통해 "상자 모델 수학"에서 제외됩니다. div 자체에 측면 패딩 또는 테두리를 추가하면 *전체* 폭을 만들기 위해 정의한 폭에 추가됩니다. div 내의 요소에서 패딩을 제거하고, 디자인에 필요한 패딩과 폭이 없는 상태로 내부에 두 번째 div를 배치할 수도 있습니다.

2) 모두 부동화됨에 따라 열에 여백이 지정되지 않았습니다. 여백을 추가해야 하는 경우에는 부동화하는 방향의 측면에 배치하지 않도록 하십시오(예: 오른쪽 부동화로 설정된 div의 오른쪽 여백). 대신에 여러 번 패딩이 사용될 수 있습니다. 이 규칙을 무시해야 하는 div의 경우, 일부 버전의 Internet Explorer에서 여백이 이중으로 삽입되는 버그를 해결하기 위해 div의 규칙에 "display:inline" 선언을 추가해야 합니다.

3) 문서에서 클래스를 여러 번 사용할 수 있으므로(또한 요소에 여러 클래스를 적용할 수 있으므로), 열에 ID 대신 클래스 이름이 지정되었습니다. 예를 들어, 필요한 경우 두 개의 사이드바 div를 누적할 수 있습니다. 문서당 한 번만 사용하는 한, 사용자의 환경 설정에 해당하는 경우 이 사이드바 div를 손쉽게 ID로 변경할 수 있습니다.

4) nav를 왼쪽 대신 오른쪽에 오게 하려는 경우, 이러한 열을 반대 방향(전체 왼쪽 대신 전체 오른쪽)으로 부동화하면 역순으로 렌더링됩니다. HTML 소스에서 div를 이리저리 옮기지 않아도 됩니다.

*/
.sidebar1 {
	float: left;
	width: 180px;
	background-color: #EADCAE;
	padding-bottom: 10px;
}
.content {

	padding: 10px 0;
	width: 780px;
	float: left;
}

/* ~~ 그룹화된 이 선택기는 .content 영역 공간에 목록을 제공합니다. ~~ */
.content ul, .content ol { 
	padding: 0 15px 15px 40px; /* 이 패딩은 머리글의 오른쪽 패딩과 위의 단락 규칙을 미러링합니다. 패딩은 목록에서 다른 요소들 사이의 공간 아래쪽과 들여쓰기 생성을 위한 왼쪽에 배치되었습니다. 패딩은 원하는 대로 조정할 수 있습니다. */
}

/* ~~ 탐색 목록 스타일(Spry와 같이 미리 만들어진 플라이아웃 메뉴를 사용하기로 선택한 경우 제거될 수 있음) ~~ */
ul.nav {
	list-style: none; /* 목록 표시 기호를 제거합니다. */
	border-top: 1px solid #666; /* 링크의 위쪽 테두리를 만듭니다. 다른 모든 항목은 LI에서 아래쪽 테두리를 사용하여 배치됩니다. */
	margin-bottom: 15px; /* 아래 내용의 내비게이션 사이에 공간을 만듭니다. */
}
ul.nav li {
	border-bottom: 1px solid #666; /* 버튼 간격을 만듭니다. */
}
ul.nav a, ul.nav a:visited { /* 이러한 선택기를 그룹화하여 방문한 이후에도 링크가 버튼 모양을 유지하도록 합니다. */
	padding: 5px 5px 5px 15px;
	display: block; /* 링크에 블록 속성을 제공하여 이를 포함한 전체 LI를 채우도록 합니다. 이렇게 하면 전체 영역이 마우스 클릭에 반응하게 됩니다. */
	width: 160px;  /*이 폭은 IE6에서 전체 버튼을 클릭할 수 있도록 합니다. IE6를 지원할 필요가 없는 경우에는 제거할 수 있습니다. 사이드바 컨테이너의 폭에서 이 링크의 패딩을 제외함으로써 올바른 폭을 계산합니다. */
	text-decoration: none;
	background-color: #C6D580;
}
ul.nav a:hover, ul.nav a:active, ul.nav a:focus { /* 마우스 및 키보드 탐색기의 배경 및 텍스트 색상을 변경합니다. */
	background-color: #ADB96E;
	color: #FFF;
}

/* ~~ 기타 부동/클래스 지우기 ~~ */
.fltrt {  /* 이 클래스는 페이지에서 오른쪽 요소를 부동화하는 데 사용될 수 있습니다. 부동화된 요소는 페이지에서 옆에 있는 다른 요소의 앞쪽에 배치되어야 합니다. */
	float: right;
	margin-left: 8px;
}
.fltlft { /* 이 클래스는 페이지에서 왼쪽 요소를 부동화하는 데 사용될 수 있습니다. 부동화된 요소는 페이지에서 옆에 있는 다른 요소의 앞쪽에 배치되어야 합니다. */
	float: left;
	margin-right: 8px;
}
.clearfloat { /* .container에서 overflow:hidden이 제거된 경우 <br /> 이 클래스는 마지막 부동 div(#container 내) 뒤에 오는 최종 요소로 빈 div에 배치될 수 있습니다. */
	clear:both;
	height:0;
	font-size: 1px;
	line-height: 0px;
}
-->
</style></head>

<body>

<div class="container">
  <div class="sidebar1">
    <ul class="nav">
      <li><a href="#">링크 1</a></li>
      <li><a href="#">링크 2</a></li>
      <li><a href="#">링크 3</a></li>
      <li><a href="#">링크 4</a></li>
    </ul>
    <p> 위 링크는 CSS로 스타일이 지정된 비순차 목록을 사용하여 기본 탐색 구조를 설명합니다. 직접 고유한 모양을 만들려면 이를 기본으로 사용하고 속성을 수정하십시오. 플라이아웃 메뉴가 필요하면 Spry 메뉴, Adobe Exchange의 메뉴 위젯 이나 다양한 다른 JavaScript 또는 CSS 솔루션을 사용하여 직접 만드십시오.</p>
    <p>내비게이션이 위쪽에 머무르게 하려면 ul.nav를 페이지 위쪽으로 이동하고 스타일링을 다시 만드십시오.</p>
    <!-- end .sidebar1 --></div>
  <div class="content">
    <h1>지침</h1>
    <p>이러한 레이아웃의 CSS에는 많은 양의 주석이 삽입됩니다. 디자인 뷰에서 대부분의 작업을 하는 경우 고정 레이아웃의 CSS로 작업하는 데 대한 팁을 얻으려면 코드 보기를 수행하십시오. 사이트를 실행하기 전에 이러한 주석을 제거할 수 있습니다. 이러한 CSS 레이아웃에서 사용되는 기술에 대해 자세히 알아 보려면 Adobe 개발자 센터에서 이 문서(<a href=http://www.adobe.com/go/adc_css_layouts">http://www.adobe.com/go/adc_css_layouts</a>)를 참조하십시오</p>
    <h2>지우기</h2>
    <p>모든 열이 부동화되므로 이 레이아웃은 .container에서 overflow:hidden을 사용합니다. 이 지우기 기술은 .container에 배치하는 테두리 또는 배경 색상을 표시하기 위해 열이 끝나는 위치를 .container가 인식하도록 합니다. .container를 벗어나는 크기의 요소가 있는 경우 잘려서 표시됩니다. 또한 .container 밖으로 요소를 가져오기 위해 음수 값의 절대 위치나 음수 값의 여백을 사용할 수 없고 이러한 요소는 .container 밖에 표시되지도 않습니다.</p>
    <p>이러한 속성을 사용하려면 다른 지우기 메서드를 사용해야 합니다. 가장 안정적인 방법은 최종 부동 열 뒤(.container를 닫기 전)에 &lt;br class="clearfloat" /&gt; or &lt;div class="clearfloat"&gt;&lt;/div&gt;를 추가하는 것입니다. 이렇게 하면 동일한 지우기 효과가 나타납니다.</p>
    <h3>바닥글</h3>
    <p>.container 안에서 열 뒤에 바닥글을 추가하면 이 overflow:hidden 지우기 메서드가 실패하게 됩니다. 첫 번째 .container 밖의 두 번째 .container에 .footer를 배치하면 요소를 제대로 표시할 수 있습니다. 가장 간단한 방법은 머리글 및 바닥글을 포함한 레이아웃으로 시작하고 머리글을 제거하여 해당 레이아웃 유형에서 지우기 메서드를 활용하는 것입니다.</p>
    <h4>배경</h4>
    <p>기본적으로 div의 배경 색상은 내용의 길이에 대해서만 표시됩니다. 사이드 열의 형태를 만들기 위해 배경 색상 또는 테두리를 사용 중인 경우에는 바닥글까지 확장되지 않으며 내용이 끝나면 중지됩니다. 계속해서 .content div에 더 많은 내용이 포함될 경우 .content div에 테두리를 배치하여 열과 구분할 수 있습니다.</p>
    <!-- end .content --></div>
  <!-- end .container --></div>
</body>
</html>
